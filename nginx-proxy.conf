# Nginx Proxy Configuration for Docker Container
# Optimized for Synology NAS Docker environment

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
                    
    access_log /var/log/nginx/access.log main;
    
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    server_tokens off;
    
    # Buffer Settings
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/json
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/x-font-ttf
        font/opentype;
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=app:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    
    # Upstream Configuration
    upstream nextjs_backend {
        # For Jenkins container on same Docker network
        server app:7008;
        
        # Alternative: For existing Jenkins container on host network
        # server 192.168.0.109:7008;
        
        # Connection pooling
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # Proxy Cache Configuration
    proxy_cache_path /var/cache/nginx/proxy_cache 
                     levels=1:2 
                     keys_zone=proxy_cache:10m 
                     max_size=1g 
                     inactive=60m 
                     use_temp_path=off;
    
    # Main Server Block
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Robots-Tag "noindex, nofollow" always;
        
        # Root location - Main application
        location / {
            # Rate limiting
            limit_req zone=app burst=20 nodelay;
            
            # Proxy configuration
            proxy_pass http://nextjs_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            
            # Proxy timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Proxy buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Cache bypass for dynamic content
            proxy_cache_bypass $http_upgrade;
            proxy_no_cache $http_upgrade;
            
            # Error handling
            proxy_intercept_errors on;
            error_page 502 503 504 /50x.html;
        }
        
        # Next.js build assets (_next/static)
        location /_next/static/ {
            proxy_pass http://nextjs_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Aggressive caching for static build assets
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "STATIC";
            
            # Enable proxy caching
            proxy_cache proxy_cache;
            proxy_cache_valid 200 1y;
            proxy_cache_use_stale error timeout invalid_header updating;
        }
        
        # Next.js dynamic routes and pages
        location /_next/ {
            proxy_pass http://nextjs_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Moderate caching
            expires 1d;
            add_header Cache-Control "public";
        }
        
        # API routes
        location /api/ {
            # Stricter rate limiting for API
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://nextjs_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No caching for API routes
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header X-Cache-Status "BYPASS";
            
            # API-specific timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Static assets (images, fonts, etc.)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
            proxy_pass http://nextjs_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Long caching for static assets
            expires 30d;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "STATIC";
            
            # Enable proxy caching
            proxy_cache proxy_cache;
            proxy_cache_valid 200 30d;
            proxy_cache_use_stale error timeout invalid_header updating;
        }
        
        # Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
        
        # App health check proxy
        location /health {
            proxy_pass http://nextjs_backend/health;
            proxy_set_header Host $host;
            access_log off;
        }
        
        # Favicon
        location = /favicon.ico {
            proxy_pass http://nextjs_backend;
            access_log off;
            expires 7d;
        }
        
        # Robots.txt
        location = /robots.txt {
            proxy_pass http://nextjs_backend;
            access_log off;
            expires 1d;
        }
        
        # Error pages
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # Server status and monitoring (optional)
    server {
        listen 8080;
        server_name localhost;
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker networks
            allow 192.168.0.0/16; # Local networks
            deny all;
        }
    }
}